#!/bin/bash
 
if [ "$#" -lt 1 ] || [ "$1" == "--help" ] || [ "$1" == "-h" ]                                                                                                                            
then
   echo "Usage : uploadNewWPTResult.sh [runner_result.json path]"
   exit 1
fi

fileName=$(basename "$1")
echo " - The result filename: $fileName"

WPT_FYI_PATH=$HOME/github/wpt.fyi-open-harmony

IFS='_' read -r result wptRevision testDate browserVersion <<< "$fileName"

runsFile="runs.json"
products=("chrome" "firefox" "safari")
shortWPTRevision="${wptRevision:0:10}" 
summaryFileName=huawei_browser-$shortWPTRevision-summary_v2.json.gz
resultURL="https://raw.githubusercontent.com/Gyuyoung/wpt-results-for-dashboard/main/summary-results/$summaryFileName"
browserVersion="${browserVersion%.json}"

createSuffix="T08:24:46.219172Z"
startSuffix="T01:23:49.798Z"
endSuffix="T0429:35.499Z"
testCreatedTime="${testDate}${createSuffix}"
testStartTime="${testDate}${startSuffix}"
testEndTime="${testDate}${endSuffix}"

echo "   * wpt revision: $wptRevision"
echo "   * test date: $testDate"
echo "   * browser version: $browserVersion"
echo "   * resultURL: $resultURL"


##### Check if the wpt dashboard has WPT results for the given wpt revision.

echo " - Check if wpt dashboard has WPT results for $shortWPTRevision WPT commit on chrome, firefox, and safari."

error_found=false

for product in "${products[@]}"; do
    api_url="https://wpt.fyi/api/shas?label=experimental&aligned&product=$product"

    json_data=$(curl -s "$api_url")

    contains_revision=$(echo "$json_data" | jq '.[] | select(index("'$shortWPTRevision'"))')

    if [ -z "$contains_revision" ]; then
        echo " - $shortWPTRevision commit was not tested by $product wpt.fyi."
        error_found=true
    fi
done

if [ "$error_found" = true ]; then
    echo " - Exit uploading a new WPT result. Please check the WPT commit revision again."
    exit 1
else
    echo " - The wpt dashboard tested the WPT $shortWPTRevision commit on the all browsers."
fi


##### Update the major browsers data.

echo " - Update Chrome, Firefox, and Safari browser's WPT results for $shortWPTRevision commit."
base_api_url="https://wpt.fyi/api/run?sha=$shortWPTRevision&label=experimental&aligned&product="

for product in "${products[@]}"; do
    old_info=$(cat "$runsFile")
    api_url="$base_api_url$product"
    new_info=$(curl -s "$api_url")
    trimmed_data=$(echo "$old_info" | sed 's/^\[\|\]$//g')
    updated_info="[$new_info,
$trimmed_data]"

    echo "$updated_info" > "$runsFile"
    echo "   * runs.json is updated by $product information."
done


##### Update the Huawei browser json data fields.

echo " - Update Huawei browser's WPT result for $shortWPTRevision commit."

old_info=$(cat runs.json)
new_id=$(LC_ALL=C tr -dc '0-9' < /dev/urandom | head -c 16)

huawei_browser_info=$(cat <<EOF
{"id":$new_id,"browser_name":"huawei_browser","browser_version":"$browserVersion","os_name":"openharmony","os_version":"3.2.3","revision":"$shortWPTRevision","full_revision_hash":"$wptRevision","results_url":"$resultURL","created_at":"$(date -u +"%Y-%m-%dT%H:%M:%S.%NZ")","time_start":"$(date -u +"%Y-%m-%dT%H:%M:%S.%NZ")","time_end":"$(date -u +"%Y-%m-%dT%H:%M:%S.%NZ")","raw_results_url":"$resultURL","labels":["azure","experimental","master","preview","huawei_browser"]}
EOF
)

trimmed_data=$(echo "$old_info" | sed 's/^\[\|\]$//g')
updated_info="[$huawei_browser_info,
$trimmed_data]"

echo "$updated_info" > "$runsFile"


##### Convert the WPT result generated by the WPT runner to the summary format processed by the wpt dashboard tool.

echo " - Convert the runner WPT result to the summary format for the wpt dashboard tool."

$WPT_FYI_PATH/results-processor/wptreport.py --summary $summaryFileName $1
gunzip $summaryFileName
mv ${summaryFileName%.gz} $summaryFileName
mv $summaryFileName ./summary-results


##### Push the new WPT result to the repository.

echo " - Push the new WPT result to the repository."

git add ./summary-results/$summaryFileName runs.json
git commit -m "Add a new wpt result on $shortWPTRevision"
git push origin main:main -f

